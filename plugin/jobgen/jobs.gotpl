{{ reserveImport "context" }}

{{ reserveImport "groundcontrol/models" }}
{{ reserveImport "groundcontrol/jobs" }}

{{ $root := . }}

{{- range $job := .Jobs }}
	{{ if .Multi }}
		// Note: hopefully we can return a slice of pointers in the future.
		func (r *mutationResolver) {{ .Name }}(ctx context.Context, id string) ([]models.Job, error) {
			jobIDs, err := jobs.{{ .Name }}(ctx, id, models.JobPriorityHigh)
			if err != nil {
				return nil, err
			}
		
			var jobs []models.Job
		
			for _, id := range jobIDs {
				jobs = append(jobs, *models.MustLoadJob(ctx, id))
			}
		
			return jobs, nil
		}
	{{- else -}}
		func (r *mutationResolver) {{ .Name }}(ctx context.Context, id string) ({{ $root.JobType | ref }}, error) {
			jobID, err := jobs.{{ .Name }}(ctx, id, models.JobPriorityHigh)
			if err != nil {
				return nil, err
			}
		
			return models.LoadJob(ctx, jobID)
		}
	{{- end }}
{{- end }}
